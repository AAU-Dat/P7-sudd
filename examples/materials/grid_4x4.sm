mdp

const double success_m = 0.6;
const double success_s = 0.75;
const double success_g = 0.8;
const double success_c = 1.0;

module unknown_MDP
	s: [0..25] init 0;
	[n] s=0 -> 1.0:(s'=14);
	[s] s=0 -> success_c:(s'=4);
	[e] s=0 -> success_s:(s'=1) + 1-success_s:(s'=5);
	[w] s=0 -> 1.0:(s'=14);
	
	[n] s=1 -> 1.0:(s'=15);
	[s] s=1 -> (1-success_s)/2:(s'=4) + success_s:(s'=5) + (1-success_s)/2:(s'=6);
	[e] s=1 -> success_g:(s'=2) + 1-success_g:(s'=6);
	[w] s=1 -> success_m:(s'=0) + 1-success_m:(s'=4);
	
	[n] s=2 -> 1.0:(s'=16);
	[s] s=2 -> (1-success_g)/2:(s'=5) + success_g:(s'=6) + (1-success_g)/2:(s'=7);
	[e] s=2 -> success_g:(s'=3) + 1-success_g:(s'=7);
	[w] s=2 -> success_s:(s'=1) + 1-success_s:(s'=5);
	
	[n] s=3 -> 1.0:(s'=17);
	[s] s=3 -> 1-success_m:(s'=6) + success_m:(s'=7);
	[e] s=3 -> 1.0:(s'=17);
	[w] s=3 -> success_g:(s'=2) + 1-success_g:(s'=6);
	
	[n] s=4 -> success_m:(s'=0) + 1-success_m:(s'=1);
	[s] s=4 -> 1.0:(s'=18);
	[e] s=4 -> 1-success_s:(s'=1) + success_s:(s'=5);
	[w] s=4 -> 1.0:(s'=18);
	
	[n] s=5 -> (1-success_s)/2:(s'=0) + success_s:(s'=1) + (1-success_s)/2:(s'=2);
	[s] s=5 -> 1.0:(s'=19);
	[e] s=5 -> (1-success_g)/2:(s'=2) + success_g:(s'=6) + (1-success_g)/2:(s'=8);
	[w] s=5 -> success_c:(s'=4);
	
	[n] s=6 -> (1-success_g)/2:(s'=1) + success_g:(s'=2) + (1-success_g)/2:(s'=3);
	[s] s=6 -> success_g:(s'=8) + 1-success_g:(s'=9);
	[e] s=6 -> (1-success_m)/2:(s'=3) + success_m:(s'=7) + (1-success_m)/2:(s'=9);
	[w] s=6 -> 1-success_s:(s'=1) + success_s:(s'=5);
	
	[n] s=7 -> 1-success_g:(s'=2) + success_g:(s'=3);
	[s] s=7 -> success_c:(s'=9);
	[e] s=7 -> 1.0:(s'=20);
	[w] s=7 -> (1-success_g)/2:(s'=2) + success_g:(s'=6) + (1-success_g)/2:(s'=8);
	
	[n] s=8 -> (1-success_g)/2:(s'=5) + success_g:(s'=6) + (1-success_g)/2:(s'=7);
	[s] s=8 -> (1-success_s)/2:(s'=11) + success_s:(s'=12) + (1-success_s)/2:(s'=13);
	[e] s=8 -> success_c:(s'=9);
	[w] s=8 -> 1.0:(s'=21);
	
	[n] s=9 -> 1-success_m:(s'=6) + success_m:(s'=7);
	[s] s=9 -> 1-success_m:(s'=12) + success_m:(s'=13);
	[e] s=9 -> 1.0:(s'=22);
	[w] s=9 -> (1-success_g)/2:(s'=6) + success_g:(s'=8) + (1-success_g)/2:(s'=12);
	
	[n] s=10 -> 1.0:(s'=10);
	[s] s=10 -> 1.0:(s'=10);
	[e] s=10 -> 1.0:(s'=10);
	[w] s=10 -> 1.0:(s'=10);
	
	[n] s=11 -> 1.0:(s'=23);
	[s] s=11 -> 1.0:(s'=23);
	[e] s=11 -> 1-success_s:(s'=8) + success_s:(s'=12);
	[w] s=11 -> 1.0:(s'=10);
	
	[n] s=12 -> success_g:(s'=8) + 1-success_g:(s'=9);
	[s] s=12 -> 1.0:(s'=24);
	[e] s=12 -> 1-success_m:(s'=9) + success_m:(s'=13);
	[w] s=12 -> 1.0:(s'=11);
	
	[n] s=13 -> success_c:(s'=9);
	[s] s=13 -> 1.0:(s'=25);
	[e] s=13 -> 1.0:(s'=25);
	[w] s=13 -> 1-success_s:(s'=8) + success_s:(s'=12);
	
	[n] s=14 -> 1.0:(s'=14);
	[s] s=14 -> success_c:(s'=4);
	[e] s=14 -> success_s:(s'=1) + 1-success_s:(s'=5);
	[w] s=14 -> 1.0:(s'=14);
	
	[n] s=15 -> 1.0:(s'=15);
	[s] s=15 -> (1-success_s)/2:(s'=4) + success_s:(s'=5) + (1-success_s)/2:(s'=6);
	[e] s=15 -> success_g:(s'=2) + 1-success_g:(s'=6);
	[w] s=15 -> success_m:(s'=0) + 1-success_m:(s'=4);
	
	[n] s=16 -> 1.0:(s'=16);
	[s] s=16 -> (1-success_g)/2:(s'=5) + success_g:(s'=6) + (1-success_g)/2:(s'=7);
	[e] s=16 -> success_g:(s'=3) + 1-success_g:(s'=7);
	[w] s=16 -> success_s:(s'=1) + 1-success_s:(s'=5);
	
	[n] s=17 -> 1.0:(s'=17);
	[s] s=17 -> 1-success_m:(s'=6) + success_m:(s'=7);
	[e] s=17 -> 1.0:(s'=17);
	[w] s=17 -> success_g:(s'=2) + 1-success_g:(s'=6);
	
	[n] s=18 -> success_m:(s'=0) + 1-success_m:(s'=1);
	[s] s=18 -> 1.0:(s'=18);
	[e] s=18 -> 1-success_s:(s'=1) + success_s:(s'=5);
	[w] s=18 -> 1.0:(s'=18);
	
	[n] s=19 -> (1-success_s)/2:(s'=0) + success_s:(s'=1) + (1-success_s)/2:(s'=2);
	[s] s=19 -> 1.0:(s'=19);
	[e] s=19 -> (1-success_g)/2:(s'=2) + success_g:(s'=6) + (1-success_g)/2:(s'=8);
	[w] s=19 -> success_c:(s'=4);
	
	[n] s=20 -> 1-success_g:(s'=2) + success_g:(s'=3);
	[s] s=20 -> success_c:(s'=9);
	[e] s=20 -> 1.0:(s'=20);
	[w] s=20 -> (1-success_g)/2:(s'=2) + success_g:(s'=6) + (1-success_g)/2:(s'=8);
	
	[n] s=21 -> (1-success_g)/2:(s'=5) + success_g:(s'=6) + (1-success_g)/2:(s'=7);
	[s] s=21 -> (1-success_s)/2:(s'=11) + success_s:(s'=12) + (1-success_s)/2:(s'=13);
	[e] s=21 -> success_c:(s'=9);
	[w] s=21 -> 1.0:(s'=21);
	
	[n] s=22 -> 1-success_m:(s'=6) + success_m:(s'=7);
	[s] s=22 -> 1-success_m:(s'=12) + success_m:(s'=13);
	[e] s=22 -> 1.0:(s'=22);
	[w] s=22 -> (1-success_g)/2:(s'=6) + success_g:(s'=8) + (1-success_g)/2:(s'=12);
	
	[n] s=23 -> 1.0:(s'=23);
	[s] s=23 -> 1.0:(s'=23);	
	[e] s=23 -> 1-success_s:(s'=8) + success_s:(s'=12);
	[w] s=23 -> 1.0:(s'=10);

	[n] s=24 -> success_g:(s'=8) + 1-success_g:(s'=9);
	[s] s=24 -> 1.0:(s'=24);
	[e] s=24 -> 1-success_m:(s'=9) + success_m:(s'=13);
	[w] s=24 -> 1.0:(s'=11);

	[n] s=25 -> success_c:(s'=9);
	[s] s=25 -> 1.0:(s'=25);
	[e] s=25 -> 1.0:(s'=25);
	[w] s=25 -> 1-success_s:(s'=8) + success_s:(s'=12);
endmodule

label "M" = s=0 | s=7 | s=13 ;
label "S" = s=1 | s=5 | s=12 ;
label "G" = s=2 | s=3 | s=6 | s=8 | s=11 ;
label "C" = s=4 | s=9 ;
label "GOAL" = s=10 ;
label "W" = s=14 | s=15 | s=16 | s=17 | s=18 | s=19 | s=20 | s=21 | s=22 | s=23 | s=24 | s=25 ;
